# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import server_pb2 as server__pb2


class ModelStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.torchmoji = channel.unary_unary(
            "/modelsuite.Model/torchmoji",
            request_serializer=server__pb2.texts.SerializeToString,
            response_deserializer=server__pb2.emojis.FromString,
        )
        self.roberta = channel.unary_unary(
            "/modelsuite.Model/roberta",
            request_serializer=server__pb2.texts.SerializeToString,
            response_deserializer=server__pb2.sentiments.FromString,
        )


class ModelServicer(object):
    """Missing associated documentation comment in .proto file."""

    def torchmoji(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def roberta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ModelServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "torchmoji": grpc.unary_unary_rpc_method_handler(
            servicer.torchmoji,
            request_deserializer=server__pb2.texts.FromString,
            response_serializer=server__pb2.emojis.SerializeToString,
        ),
        "roberta": grpc.unary_unary_rpc_method_handler(
            servicer.roberta,
            request_deserializer=server__pb2.texts.FromString,
            response_serializer=server__pb2.sentiments.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "modelsuite.Model", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Model(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def torchmoji(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/modelsuite.Model/torchmoji",
            server__pb2.texts.SerializeToString,
            server__pb2.emojis.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def roberta(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/modelsuite.Model/roberta",
            server__pb2.texts.SerializeToString,
            server__pb2.sentiments.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
